#BlueJ class context
comment0.target=SWorld
comment0.text=\r\n\ SWorld\ is\ a\ super-class\ for\ a\ scrolling\ world\ (horizontal,\ vertical,\ or\ both).<br><br>\r\n\ Author\:\ danpost<br>Version\:\ May\ 22,\ 2016\ (v2.1)<br>\r\n\ <br>\r\n\ To\ implement\ this\ super-class\:\r\n\ <l><li>(1)\ create\ a\ sub-class\ of\ this\ class</li>\r\n\ <li>(2)\ use\ a\ <i>super(....)</i>\ call\ to\ one\ of\ the\ constructors\ in\ this\ class</li>\r\n\ <li>(3)\ create\ the\ main\ actor\ (one\ that\ always\ stays\ in\ view)\ and\ call\ the\ <i>setMainActor</i>\ method</li>\r\n\ <br>\r\n\ NOTE\:\ if\ placing\ the\ main\ actor\ to\ a\ location\ where\ scrolling\ will\ end\ up\ taking\ place\ before\ moving\ it,\r\n\ place\ a\ call\ the\ the\ 'act'\ method\ of\ this\ class\ at\ the\ end\ of\ the\ constructor\ of\ its\ subclass\r\n\ using\ 'super.act();'<br><br>\r\n\ <li>(4)\ (optional)\ set\ a\ scrolling\ background\ image\ using\ a\ call\ to\ <i>setScrollingBackground</i>\ or\ <i>fillScrollingBackground</i></li></l>\r\n\ <br>\r\n\ NOTE\:\ the\ order\ of\ steps\ above\ is\ very\ important<br>\r\n\ <br>\r\n\ There\ are\ two\ methods\ to\ add\ other\ objects\ into\ the\ world\:\r\n\ <l><li>the\ standard\ method\ <i>addObject(Actor,\ int,\ int)</i>\ can\ be\ used\ to\ add\ a\ scrollable\ actor\ into\ the\ world</li>\r\n\ <li>a\ secondary\ method\ <i>addObject(Actor,\ int,\ int,\ boolean)</i>\ which\ is\ equivalent\ to\ the\ standard\ method,\ except\r\n\ that\ the\ boolean\ will\ indicate\ the\ scrollable\ state\ of\ the\ object.</li></l>\r\n\r\n\ The\ width\ and\ height\ dimensions\ for\ both\ the\ world\ and\ the\ universe\ of\ scenarios\ with\ a\ cell\ size\ greater\ than\ one\ \r\n\ will\ be\ raised\ to\ the\ nearest\ odd\ values\ to\ center\ the\ main\ actor.<br>\r\n\ <br>\r\n\ SPECIAL\ NOTE\:\ if\ you\ decide\ to\ override\ the\ 'act'\ method\ of\ this\ class\ with\ an\ 'act'\ method\ in\ your\ sub-world,\ you\ will\r\n\ need\ to\ follow\ the\ format\ below\ to\ run\ the\ scrolling\ of\ the\ scenario\:\r\n\ \r\n\ <pre>\ \ \ \ \ \ \ \ public\ void\ act()\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ //\ possibly\ some\ code\ here\ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ super.act();\r\n\ \ \ \ \ \ \ \ \ \ \ \ //\ possibly\ some\ more\ code\ here\r\n\ \ \ \ \ \ \ \ }<pre>\r\n
comment1.params=wide\ high\ cellSize\ scrollWide\ scrollHigh
comment1.target=SWorld(int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ The\ constructor\ for\ a\ universal\ scroller.\r\n\ Creates\ an\ unbounded\ world\ and\ sets\ the\ size\ of\ the\ scrollable\ area.\r\n\r\n\ @param\ wide\ the\ window\ width\r\n\ @param\ high\ the\ window\ height\r\n\ @param\ cellSize\ the\ size\ of\ each\ cell\r\n\ @param\ scrollWide\ the\ scrollable\ width\ (minimum\ value\ is\ window\ width)\r\n\ @param\ scrollHigh\ the\ scrollable\ height\ (minimum\ value\ is\ window\ height)\r\n
comment10.params=
comment10.target=void\ act()
comment10.text=\r\n\ Runs\ the\ scrolling.\r\n
comment11.params=
comment11.target=void\ scrollBackground()
comment11.text=\r\n\ Scrolls\ the\ background\ image.\r\n
comment12.params=
comment12.target=void\ scrollObjects()
comment12.text=\r\n\ Scrolls\ all\ scrollable\ object.\ \ Determines\ how\ far\ outside\ boundary\ limits\ the\ main\ actor\ is,\ and\ moves\ all\ neccessary\r\n\ objects\ in\ the\ same\ direction,\ moving\ the\ main\ actor\ back\ within\ boundary\ limits.\ \ A\ background\ can\ be\r\n\ made\ up\ of\ scrollable\ actor\ object(s)\ to\ produce\ a\ scrolling\ background;\ however,\ determining\ intersectors\ with\ object\r\n\ will\ have\ to\ include\ the\ background\ object\ as\ being\ one\ or\ more\ of\ them\ when\ using\ <i>null</i>\ for\ the\ class\ of\ intersector.\r\n
comment13.params=
comment13.target=int\ getScrolledX()
comment13.text=\r\n\ Returns\ the\ horizonal\ offset\ from\ the\ left\ edge\ of\ the\ scrolling\ world\ to\ the\r\n\ left\ edge\ of\ the\ world\ window\r\n\r\n\ return\ the\ amount\ of\ scrollable\ background\ off\ the\ left\ edge\ of\ the\ world\ window\r\n
comment14.params=
comment14.target=int\ getScrolledY()
comment14.text=\r\n\ Returns\ the\ vertical\ offset\ from\ the\ top\ edge\ of\ the\ scrolling\ world\ to\ the\r\n\ top\ edge\ of\ the\ world\ window\r\n\r\n\ return\ the\ amount\ of\ scrollable\ background\ off\ the\ top\ edge\ of\ the\ world\ window\r\n
comment15.params=
comment15.target=int\ getScrollingWidth()
comment15.text=\r\n\ Returns\ the\ width\ of\ the\ scrolling\ area\ of\ the\ universe\r\n\r\n\ @return\ the\ width\ of\ the\ visible\ scrolling\ area\r\n
comment16.params=
comment16.target=int\ getScrollingHeight()
comment16.text=\r\n\ Returns\ the\ height\ of\ the\ scrolling\ area\ of\ the\ universe\r\n\r\n\ @return\ the\ height\ of\ the\ visible\ scrolling\ area\r\n
comment2.params=wide\ high\ cellSize\ scrollWide
comment2.target=SWorld(int,\ int,\ int,\ int)
comment2.text=\r\n\ The\ constructor\ for\ a\ horizontal\ (side)\ scroller.\r\n\ Calls\ the\ universal\ scroller\ constructor\ with\ scrollHigh\ equal\ to\ the\ window\ height\ parameter.\r\n\r\n\ @param\ wide\ the\ window\ width\r\n\ @param\ high\ the\ window\ height\r\n\ @param\ cellSize\ the\ size\ of\ each\ cell\r\n\ @param\ scrollWide\ the\ scrollable\ width\ (minimum\ value\ is\ window\ width)\r\n
comment3.params=main\ xRange\ yRange
comment3.target=void\ setMainActor(greenfoot.Actor,\ int,\ int)
comment3.text=\r\n\ Adds\ the\ main\ actor\ into\ the\ world\ at\ the\ center\ of\ the\ window\ and\r\n\ sets\ the\ range\ in\ movement\ within\ the\ window\ for\ the\ actor,<br>\r\n\ <br>\r\n\ NOTE\:\ this\ method\ must\ be\ called\ prior\ to\ calling\ <i>setScrollingBackground</i>\r\n\ <br>\r\n\ NOTE\ 2\:\ if\ placing\ the\ main\ actor\ to\ a\ location\ where\ scrolling\ will\ end\ up\ taking\ place\ before\ moving\ it,\r\n\ place\ a\ call\ the\ the\ 'act'\ method\ of\ this\ class\ at\ the\ end\ of\ the\ constructor\ of\ its\ subclass\r\n\ using\ 'super.act()'.<br>\r\n\r\n\ @param\ main\ the\ actor\ that\ is\ to\ always\ stay\ in\ view\r\n\ @param\ xRange\ the\ horizontal\ range\ of\ movement\ within\ the\ window\r\n\ @param\ yRange\ the\ vertical\ range\ of\ movement\ within\ the\ window\r\n
comment4.params=scrollingBackground
comment4.target=void\ setScrollingBackground(greenfoot.GreenfootImage)
comment4.text=\r\n\ Adds\ a\ scrolling\ background\ to\ the\ world;\ see\ method\ description\ for\ notes\ on\ unwanted\ results.<br>\r\n\ <br>\r\n\ NOTE\:\ for\ this\ method\ to\ work,\ the\ main\ actor\ must\ have\ previously\ been\ set\ with\ <i>setMainActor</i>.\ \ The\ image\ will\ then\r\n\ be\ scaled\ to\ the\ appropriate\ size\ and\ is\ centered\ in\ the\ scrollable\ world.\r\n\r\n\ @param\ scrollingBackground\ the\ image\ to\ be\ used\ for\ the\ scrolling\ background\ of\ the\ world\r\n
comment5.params=fillImage
comment5.target=void\ fillScrollingBackground(greenfoot.GreenfootImage)
comment5.text=\r\n\ Fills\ the\ background\ of\ the\ scrolling\ area\ with\ the\ <i>fillImage</i>.<br>\r\n\ <br>\r\n\ NOTE\:\ for\ this\ method\ to\ work,\ the\ main\ actor\ must\ have\ previously\ been\ set\ with\ <i>setMainActor</i>.\ \ The\ image\ will\ then\r\n\ be\ used\ to\ fill\ the\ background\ of\ the\ scrolling\ area\ and\ is\ centered\ in\ the\ scrollable\ world.\r\n\ \r\n\ @param\ fillImage\ the\ image\ to\ fill\ the\ background\ of\ the\ scrolling\ area\ with\r\n
comment6.params=obj\ xLoc\ yLoc\ scroller
comment6.target=void\ addObject(greenfoot.Actor,\ int,\ int,\ boolean)
comment6.text=\r\n\ Adds\ an\ object\ into\ the\ world,\ listing\ it\ in\ an\ the\ Actor\ array\ if\ it\ is\ a\ scrollable\ object\r\n\r\n\ @param\ obj\ the\ object\ to\ add\ to\ the\ world\r\n\ @param\ xLoc\ the\ x-coordinate\ to\ place\ the\ object\r\n\ @param\ yLoc\ the\ y-coordinate\ to\ place\ the\ object\r\n\ @param\ scroller\ a\ flag\ indicating\ whether\ this\ object\ is\ of\ scrollable\ type\ or\ not\r\n
comment7.params=obj\ xLoc\ yLoc
comment7.target=void\ addObject(greenfoot.Actor,\ int,\ int)
comment7.text=\r\n\ Adds\ a\ scrollable\ object\ into\ the\ world,\ listing\ them\ in\ the\ Actor\ array.\r\n\r\n\ @param\ obj\ the\ scrollable\ object\ to\ add\ to\ the\ world\r\n\ @param\ xLoc\ the\ x-coordinate\ to\ place\ the\ object\r\n\ @param\ yLoc\ the\ y-coordinate\ to\ place\ the\ object\r\n
comment8.params=obj
comment8.target=void\ removeObject(greenfoot.Actor)
comment8.text=\r\n\ Removes\ an\ object\ from\ the\ world,\ re-defining\ fields\ as\ neccessary\r\n\r\n\ @param\ obj\ the\ object\ to\ be\ removed\ from\ the\ world\r\n
comment9.params=objs
comment9.target=void\ removeObjects(java.util.List)
comment9.text=\r\n\ Removes\ a\ collection\ of\ objects\ from\ the\ world,\ calling\ <i>removeObject(Actor)</i>\ for\ each\ one\ in\ the\ list\r\n\r\n\ @param\ objs\ the\ collection\ or\ list\ of\ objects\ to\ be\ removed\ from\ the\ world\r\n
numComments=17
